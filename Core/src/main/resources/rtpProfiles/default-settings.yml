#
#     = = = = = = = = = = = = = = =
#     → Default rtpSettings file  ←
#     = = = = = = = = = = = = = = =
#
# The name of this config section is 'default-settings', each section must have a unique name
# Please don't manually change the version, the config loader may get mad if you do.
$version: '1.0'

# Should we load this config? If false, this config will not be usable anywhere.
# If this setting is left unset, the config will still get loaded.
# For finer control, enable or disable command-enabled and require-explicit-permission.
enabled: true

# Every time this RtpProfile is visible to a player, either if they list their rtp options, see it in a tab-complete,
# or use it as an argument in `/rtp [config-name]` or `/force-rtp [config-name]`, the name set here will be the one
# seen. For configuration options, (like in this file and others) the name of the config file (minus the .yml) will be
# used instead. For most cases, you can leave the visible name to be the same as the config name. The intent of this
# setting is to allow situations where say 3 rtpProfiles are named "resource", but players can access different ones
# based on their rank/permissions.
# Leave as `~` or `null` for this name to be the same as the name of the file.
visible-name: ~

# Can a player rtp with this profile through the `/rtp` command?
command-enabled: true

# Does the player need a permission to use this RtpProfile?
# This config option can either be a boolean (so either true or false), or the literal permission node you want to use.
# If you want this RtpProfile to be usable by everyone, set this to `false`. If set to `true`, players will only be able
#   to use this RtpProfile if they have the permission `jakesrtp.use.[config-name]` where `config-name` is the name of
#   this file (excluding the .yml). If set to a string, for example `require-permission: potato`, a player will only be
#   able to use this RtpProfile if they have the permission `jakesrtp.use.potato`.
# The permission will ALWAYS even when `/force-rtp` is used! If you plan on only having this profile only usable through
#   the `/force-rtp` command (like for use with command blocks and portals) you should set `command-enabled` to false!
require-permission: false

# The priority of the config. Higher priority are preferred over lower ones.
# Priority only comes into play if multiple RtpProfiles could be used for a situation.
# Some examples of when this may happen are:
#  - A player has permission to use multiple RtpProfiles that can be called from their world.
#  - A player runs `/rtp [visible-name]` with a name that maps to multiple profiles.
#  - A `/force-rtp` is run on a player (force-rtp skips the call-from-world check) with no RtpProfile name given.
#    This means every profile that every profile the player has permissions for could potentially be used.
# Please note that a player's cool-down is NEVER considered when choosing which RtpProfile to use.
priority: 1

# The world that the user is teleported to.
landing-world: 'world'

# A list of worlds that this command works in, parsed with regex.
# Note: the `.*` matches any characters after the word `world`, meaning `world_nether`, etc. will be matched.
# If you only want the world named `world` to match, remove the `.*`
call-from-worlds:
  - 'world.*'


# The distribution is what decides where the players will be teleported. There are currently THREE options on how
# the distribution can be set. In the file, they are named `distribution-v1`, `distribution-v2` and `distribution-v3`.
#     ┌──────────────────────────────────────────────────────────────────────────────────────────────────┐
#     │ !! ONLY THE DISTRIBUTION NAMED `distribution` WILL BE LOADED. BY DEFAULT, NONE HAVE THAT NAME !! │
#     │ !! TO CHOOSE WHICH OF THESE YOU WANT TO USE, YOU MUST CHANGE THE NAME OF AT LEAST ONE OF THEM !! │
#     └──────────────────────────────────────────────────────────────────────────────────────────────────┘
# So first off, if you do not listen to the warning up ↑ here ↑ then the default distribution will be loaded. That's
#   honestly pretty boring, so you should keep on reading... Since dist-v1 is the simplest, that's the one that goes
#   first, though you will want to read the comments above all the three sections. If you don't like reading that much,
#   just remember, these are likely going to be the settings you most want to change.
# Anyway, the way dist-v1 works is to copy its distribution from another RtpProfile file, so any other file in the
#   folder that this file is located. When you only have one RtpProfile, there are no other distributions to copy from,
#   so you'll want to NOT use this option. If you do have more profiles, just set the value to be the name of the file
#   (excluding the .yml at the end) instead of the `~` and then that distribution will be used.
distribution-v1: ~

# This second option is a template for the symmetric distribution. The shape can be set to either `square` or `circle`,
#   and the rest of the same settings apply. If the center option is set to `b` (player's current location), then
#   location caching will NOT be used (`a` and `c` work fine because the location is consistent between players).
# Notes for `gaussian-distribution`:
#   Enabling this will make the points no longer evenly distributed, but instead follow a gaussian centered between the
#   min and max radius (represented by setting center to 0 for min, 1 for max, or anything in between). Shrink makes
#   the distribution denser, my preference is to keep it near 3 for a center of 0 or 1, and 6 for a center of 0.5
distribution-v2:
  shape: square # or 'circle'
  center:
    option: a
    a: 'world spawn'
    b: 'players current location'
    c-custom:
      x: 0
      z: 0
  radius:
    max: 2000
    min: 1000
  gaussian-distribution:
    enabled: false
    shrink: 4
    center: 0.25

distribution-v3:
  shape: rectangle
  center:
    option: a
    a: 'world spawn'
    b: 'players current location'
    c-custom:
      x: 0
      z: 0
  size:
    x-width: 2000
    z-width: 1600
  gap:
    enabled: true
    x-width: 700
    z-width: 700
    x-center: 150
    z-center: 150

# Cooldown (time in seconds) between uses.
# Can be bypassed with permission node `jakesrtp.nocooldown` or 'jakesrtp.nocooldown.[rtpSettings]'
#                            (where the default config would be 'jakesrtp.nocooldown.default-settings')
# The cooldown is only used when the rtp is from a player run `/rtp` command, not from any type of force-rtp.
cooldown: 30

# Warmup (time in seconds) between calling the command, and actually getting teleported.
# Setting to `0` or negative will disable this feature.
# Can be bypassed in a similar way to the cooldown (`jakesrtp.nowarmup` or 'jakesrtp.nowarmup.[rtpSettings]')
# The warmup is only used when the rtp is from a player run `/rtp` command, not from any type of force-rtp.
warmup:
  time: 0
  cancel-on-move: true
  count-down: true

# Executes commands as console after a player is rtp'd.
# Placeholders - These can be used only in rtpSettings `then-execute` list items. Typing a placeholder wrong will
# result in the word 'null' instead of the placeholders value. Placeholders may be in upper or lower case.
#   %player%              The players minecraft name
#   %player_display_name% The players 'display-name' or nickname
#   %location%            The location the player landed, formatted like this: world (867, 53, -9)
#   %world%               The world the player landed in, formatted like this: world
#   %x% or %y% or %z%     Each of these will give its corresponding value, formatted like this: 86
#   %location_old%        The location of the player before they moved.
#   %world_old%           The world the player was in before they are moved.
#   %x_old% or %y_old% or %z_old% The x or y or z location of the player before they were moved.
then-execute:
  - 'tellraw %PLAYER% {"text":"You have been teleported to %LOCATION% in %WORLD%!"}'

# This only is used if you have an economy plugin.
# If you do have an economy plugin and you want to disable this feature, set cost to 0.
# Note: Cost can be a floating point value (ex: 6.67)
cost: 0.0

# Which method should we use to find a safe location? Since this plugin is meant to work 'out-of-the-box' without need
#   of configuring, the 'auto' option has been included.
# a - Auto:       Chooses middle-out for the nether and top-down for everything else.
# b - Top down:   Starts the search at the high bound and moves down until it finds the ground.
# c - Middle out: Starts the search between high and low and moves up and down to find land.
# The main difference between a and b? Top-down will never spawn you in a cave whereas Middle-out is intended for
#   underground teleports. Middle-out was written specifically to be used in the nether, though you can use it wherever.
# Note: If you choose c, you may want to edit `bounds.high` and make sure it set to the max height for your world.
location-checking-profile: a

# Some black/white lists of materials that help determine where a player can or can not get teleported to. This section
#   can either have three sub-lists (like it does in the default file), the name of another RTP Profile to copy the
#   lists from (much like how the `distribution` and `cooldown` sections work), or have `null` or `~` as its value,
#   which will lead to the plugin defaults getting used.
# There are three separate lists defined, and each is used a different way.
#   SAFE-TO-BE-IN   - These are blocks that a player can get teleported INTO.
#                     This is where you put materials like AIR and other materials that you can safely stand in.
#   UNSAFE-TO-BE-ON - These are blocks you NEVER want UNDER a player when they are teleported.
#                     It may be smart to have things like AIR and LAVA in here.
#   TREE-LEAVES     - With `Top Down` searching, players will ONLY be placed in positions where every block from their
#                     feet up is either safe to be in, or tree leaves. This allows people to spawn under trees, but not
#                     inside caves. You can add non-leaves to this to allow people to land under other block types...
#   UNSAFE-BIOMES   - A player will NEVER land in any of the given biomes.
block-lists:
  safe-to-be-in:
    - 'AIR'
    - 'SNOW'
    - 'FERN'
    - 'LARGE_FERN'
    - 'VINE'
    - 'GRASS'
    - 'TALL_GRASS'
    - 'GLOW_LICHEN'
    - 'MOSS_CARPET'
    - 'GLOW_BERRIES'
  unsafe-to-be-on:
    - 'LAVA'
    - 'MAGMA_BLOCK'
    - 'WATER'
    - 'AIR'
    - 'CAVE_AIR'
    - 'VOID_AIR'
    - 'CACTUS'
    - 'SEAGRASS'
    - 'KELP'
    - 'TALL_SEAGRASS'
    - 'LILY_PAD'
    - 'BAMBOO'
    - 'BAMBOO_SAPLING'
    - 'SMALL_DRIPLEAF'
    - 'BIG_DRIPLEAF'
    - 'BIG_DRIPLEAF_STEM'
    - 'POINTED_DRIPSTONE'
  tree-leaves:
    - 'ACACIA_LEAVES'
    - 'BIRCH_LEAVES'
    - 'DARK_OAK_LEAVES'
    - 'JUNGLE_LEAVES'
    - 'OAK_LEAVES'
    - 'SPRUCE_LEAVES'
    - 'AZALEA_LEAVES'
    - 'FLOWERING_AZALEA_LEAVES'
  unsafe-biomes:
    - ''

############## # Everything past this point in the config probably does not need to get changed
bounds: # The lowest and highest points a player can be RTP'd to.
  low: 32     # Default: 32
  high: 255   # Default: 255  | SET THIS TO 127 FOR NETHER WORLDS IF location-checking-profile IS NOT ON AUTO
check-radius: # How many blocks away from the initial spot to check.
  x-z: 2      # Default: 2    | Max spots to check per attempt is equal to:
  vert: 2     # Default: 2    | (2*vert+1)*(2*(x-z)+1)^2
max-attempts: # If the random location, and all (by default 125) close spots are found to be unsafe,
  value: 10   #   how many attempts can we make? Minimum: 1; Default: 10
preparations: # Preparing spots to teleport to. Note: These will be ignored if the center is players location.
  cache-locations: 10 # The number of safe rtp spots to hold on to. For best performance, keep this larger than 2.
prefer-sync-tp: # Players can be teleported either synchronously or asynchronously. Sync is faster, but can (not always)
  command: false #  produce lag-spikes that are felt by other players. Async is slower, but only for the person rtp-ing.
